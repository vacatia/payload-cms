version: '3.8'

services:
  postgres:
    image: postgis/postgis:16-3.4
    container_name: payload-postgres-dev
    environment:
      POSTGRES_USER: search_poc
      POSTGRES_PASSWORD: search_poc_pass
      POSTGRES_DB: payload_cms
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - payload-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U search_poc -d payload_cms"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  payload:
    build: .
    container_name: payload-cms-dev
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URI: postgresql://search_poc:search_poc_pass@postgres:5432/payload_cms
      PAYLOAD_SECRET: your-secret-key-change-this-in-production
      NODE_ENV: development
      PORT: 3000
    ports:
      - "4001:3000"
    volumes:
      - ./src:/app/src
      - ./app:/app/app
      - ./next.config.ts:/app/next.config.ts
      - node_modules:/app/node_modules
    networks:
      - payload-network
    command: npm run dev

volumes:
  postgres_data:
  node_modules:

networks:
  payload-network:
    driver: bridge
